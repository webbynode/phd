#! /bin/bash

# Usage: phd [dir] [host name]
#
# eventually, it might be `phd run [app]` if phd gets more sophisticated

if [[ -z "$1" ]]; then
	echo "Usage: phd [application's .git directory] [hostname]" 
	exit
fi

PHD_ROOT=/var/webbynode/phd
LOG_DIR=/var/webbynode/log

if [ ! -d $LOG_DIR ]; then
  sudo mkdir -p $LOG_DIR
  sudo chown -R git:www-data $LOG_DIR
fi

dir=$(dirname $1)
host=$3
app_name=$(basename $dir)
base=$host

if [[ ! "$host" =~ "." ]]; then
  base=$host
  host="$host.webbyapp.com"
fi

# read .phdrc (for overrides)
if [[ -f ~/.phdrc ]]; then
	source ~/.phdrc
fi

echo ""
echo "----------------------------"
echo "  Webbynode git deployment "
echo "----------------------------"
echo ""

if [[ -d "/opt/nginx" ]]; then
  echo "Nginx+Passenger webserver detected..."
  WEB_SERVER="nginx"
  WEB_SERVER_ROOT="/opt/nginx"
elif [[ -d '/etc/nginx' ]]; then
  echo "Nginx webserver detected..."
  WEB_SERVER="nginx"
  WEB_SERVER_ROOT="/etc/nginx"
else
  echo "Apache webserver detected..."
  WEB_SERVER="apache"
  WEB_SERVER_ROOT='/etc/apache2'
fi

if [[ "$WEB_SERVER" == "nginx" ]]; then
  # default nginx virtualhosts path
  PHD_VIRTUALHOSTS="$WEB_SERVER_ROOT/phd-sites"
  PHD_CONFIG="$WEB_SERVER_ROOT/conf/nginx.conf"
  PHD_INCLUDE="include $PHD_VIRTUALHOSTS/*;"
else
  # default apache virtualhosts path
  PHD_VIRTUALHOSTS='/etc/apache2/phd-sites'
  PHD_CONFIG='/etc/apache2/apache2.conf'
  PHD_INCLUDE="Include $PHD_VIRTUALHOSTS"
fi

PUSHAND_INSTALL_DIR=~/tmp

sudo mkdir -p /var/log/phd
sudo chown -R git:www-data /var/log/phd

if [[ ! "$base" =~ "." ]]; then
  ip=`ifconfig | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`
  echo "Setting up DNS..."
  echo ""
  output=`curl -s https://manager.webbynode.com/api/yaml/webbyapp/$base/create?ip=$ip`
  name=`echo "$output" | sed -n -e 's/:name: \(.*\)/\1/p' | sed -n -e 's/\( *\)//p'`
  host="$name.webbyapp.com"
fi

if [[ -f /var/webbynode/mappings/$app_name.conf ]]; then
  app_dns=$(cat /var/webbynode/mappings/$app_name.conf)
  if [[ ! "$app_dns" = "$host" ]]; then
    echo "Application dns entry changed from $app_dns to $host"
    echo "  => Fixing mapping"
    rm /var/webbynode/mappings/$app_name.conf
    
    echo "  => Removing vHost for $app_dns"
    rm $PHD_VIRTUALHOSTS/$app_dns
    
    echo ""
  fi
fi

echo "Deploying application $app_name as $host..."

add_on() {
  echo "  => Installing addon $1"
}

add_on_status() {
  echo "     $1..."  
}

add_on_wait() {
  echo "     $1..."
  echo "     This may take a few minutes, please wait..."
}

check_installed() {
  installed=n
  output=`dpkg -s $1 2>&1`
  if [ $? == 0 ]; then
    output=`dpkg -s $1 | grep Status: | grep " installed"`
    if [ $? == 0 ]; then
      installed=y
    fi
  fi
}

install_if_needed() {
  check_installed $1
  
  if [ "$installed" == "n" ]; then
    add_on_wait "Installing $1"
    sudo apt-get install -y -q $1 2>&1 | sed 's/^/     /' > $LOG_DIR/$1-install.log 2>&1
    
    if [ "$?" != "0" ]; then
      add_on_status "WARNING: There was an error installing $1."
      add_on_status "         Please check $LOG_DIR/$1-install.log for installation logs."
    fi
    
    if [ ! -z "$2" ]; then
      `$2`
    fi
  fi
}

check_bundler() {
  result=`gem list bundler | grep bundler`
  if [ "$?" != "0" ]; then
    # bundler not installed
    sudo gem install bundler --pre >> $LOG_DIR/bundler_install.log 2>&1
    sudo gem install bundler >> $LOG_DIR/bundler_install.log 2>&1
  fi
  
  if [ -f Gemfile ]; then
    echo "  => Bundling gems..."
    unset GIT_DIR && bundle install --without test development > $LOG_DIR/bundler.log 2>&1
    return 1
  fi
  
  return 0
}

configure_apache_vhost() {
  if [[ -f "$PHD_VIRTUALHOSTS/$host" ]]; then
		echo '     Already configured!'
		return 1
	else
		PHD_VIRTUALHOST_TEXT="echo \"$PHD_VIRTUALHOST_TEXT\""
		eval "$PHD_VIRTUALHOST_TEXT" > $PHD_VIRTUALHOSTS/$host
		echo "$host" >> /var/webbynode/mappings/$app_name.conf
		return 0
	fi
}

configure_nginx_vhost() {
  if [[ -f "$PHD_VIRTUALHOSTS/$host" ]]; then
		echo '     Already configured!'
		return 1
	else
		PHD_VIRTUALHOST_TEXT="echo \"$PHD_VIRTUALHOST_TEXT\""
		eval "$PHD_VIRTUALHOST_TEXT" > $PHD_VIRTUALHOSTS/$host
		echo "$host" >> /var/webbynode/mappings/$app_name.conf
		return 0
	fi
}

configure_vhost() {
  echo "  => Configuring $WEB_SERVER vHost..."
  if [[ "$WEB_SERVER" == "nginx" ]]; then
    configure_nginx_vhost
  else
    configure_apache_vhost
  fi
  
  return $?
}

restart_webserver() {
  echo ""
  if [[ "$1" == "1" ]]; then
    echo "Restarting passenger..."
    mkdir -p $dir/tmp
    touch $dir/tmp/restart.txt > $LOG_DIR/passenger_restart.log 2>&1
  else
    echo "Restarting $WEB_SERVER"
    if [[ "$WEB_SERVER" == "apache" ]]; then
      sudo /etc/init.d/apache2 restart > $LOG_DIR/apache2_restart.log 2>&1
    else
      sudo /etc/init.d/nginx stop  > $LOG_DIR/nginx_stop.log 2>&1
      sleep 2
      sudo /etc/init.d/nginx start > $LOG_DIR/nginx_start.log 2>&1
    fi
  fi
}

if [[ -f "$dir/.webbynode/settings" ]]; then
  vars=`cat $dir/.webbynode/settings` 
  eval $vars
fi

echo ""

if [[ ! -z "addons" ]]; then
  echo "Configuring addons..."
  
  for addon in ${addons[@]}; do
    if [[ ! -f "$PHD_ROOT/scripts/addons/$addon.sh" ]]; then
      echo "WARNING: Missing support for addon: $addon. Skipping"
    else
      . $PHD_ROOT/scripts/addons/$addon.sh
    fi
  done
  
  echo ""
fi

if [[ ! -z "$engine" ]]; then
  if [[ ! -f "$PHD_ROOT/scripts/$engine.sh" ]]; then
    echo "Missing support for engine: $engine. Aborting."
    exit
  else
    . $PHD_ROOT/scripts/$engine.sh
  fi
else
  if [[ -d "$dir/app" && -d "$dir/app/controllers" && -f "$dir/config/environment.rb" ]]; then
    . $PHD_ROOT/scripts/rails.sh
  elif [[ -f "$dir/config.ru" ]]; then
    . $PHD_ROOT/scripts/rack.sh
  else
    echo "WARNING: Didn't detect what application engine you're using."
  fi
fi

echo ""
echo "$app_name deployed successfully."
if [[ ! "$base" =~ "." ]]; then
  echo ""
  echo "Created http://$host/"
fi
echo ""
